#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 6097 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 8 #")       "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Constants:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 1 #" "
0 0 21 3 4 #"1366"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 1 #" "
0 0 21 3 3 #"788"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"empty\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dot\""
0 0 24 3 4 #")   "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"wall\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cherry\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; initial board"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PM-SPEED"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"GT-SPEED"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SMALL-BOARD"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"SMALL-BOARD-WIDTH"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"SMALL-BOARD"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"SMALL-BOARD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 11 #"SMALL-BOARD"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCORE-HEIGHT"
0 0 24 3 4 #"    "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"SCORE-TEXT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"PM"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"grafx/pac_open.png\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-PM"
0 0 24 3 1 #" "
0 0 14 3 2 #"PM"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"U-PM"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-PM"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"L-PM"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-PM"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"D-PM"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-PM"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"C-PM"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"grafx/pac_close.png\""
0 0 24 3 4 #"))) "
0 0 17 3 12 #";close mouth"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"CHERRY"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"grafx/cherry.png\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"GT"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"grafx/ghost.png\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"MTC"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")) "
0 0 17 3 12 #"; empty cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"DTC"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"  "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #") "
0 0 14 3 3 #"MTC"
0 0 24 3 9 #"))       "
0 0 17 3 13 #"; dot in cell"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"WALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))  "
0 0 17 3 6 #"; wall"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"MTB"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCORE-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SMALL-MTB"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 17 #"SMALL-BOARD-WIDTH"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 18 #"SMALL-BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCORE-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Data definitions:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Score is Natural"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; interp. dots eaten by pac-man since start of game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-SCORE"
0 0 24 3 2 #"  "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; CellValue is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; - \"empty\""
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - \"dot\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; - \"wall\""
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; - \"cherry\""
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; interp. the content of a board cell"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"not-wall?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"wall\""
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Direction is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - \"U\""
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - \"D\""
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - \"L\""
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; - \"R\""
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; interp. direction that a sprite is facing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Pos is (make-pos Natural Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; interp. a position on the board"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"MAP-LIST"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"loopi"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"loopj"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"not-wall?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 5 #")) ))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"loopj"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"loopi"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"sprite"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Sprite is (make-sprite Natural Natural Direction)"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; interp. the position in Board coordinates, and the direction of a"
 #" sprite"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-PM"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Board is (vectorof (vectorof CellValue))"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; interp. the game board"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"RENDER-TEST-BOARD"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Ghost is (make-ghost Natural Natural Direction)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; interp. a ghost chasing pacman"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-GT"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #" ("
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gt"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; GameState is (make-gs Sprite Board Image Score Natural Ghost)"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; interp. all parts of the pac-man game; pac-man, the current"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; board, the current board image, and the current score"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; time is the in seconds after the game starts"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; gt is the ghost"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"MTB-GS"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-gs"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-PM"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 1 #" "
0 0 14 3 3 #"MTB"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-SCORE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-GT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Testing values:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Sprite:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"R-SPRITE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"L-SPRITE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"U-SPRITE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"D-SPRITE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-GT"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Board:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"EE-BOARD"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"ED-BOARD"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"DD-BOARD"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; GameState:"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; MTB-GS previously defined above"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"END-GS"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-gs"
0 0 24 3 1 #" "
0 0 14 3 8 #"R-SPRITE"
0 0 24 3 1 #" "
0 0 14 3 8 #"EE-BOARD"
0 0 24 3 1 #" "
0 0 14 3 9 #"SMALL-MTB"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"R-GT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Functions:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; -> GameState"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; runs the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-GS"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-gs"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-PM"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 12 #"render-board"
0 0 24 3 1 #" "
0 0 14 3 10 #"INIT-BOARD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 10 #"INIT-SCORE"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 7 #"INIT-GT"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 7 #"INIT-GS"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-scene"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; calculate final score"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"final-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"ttime"
0 0 24 3 1 #" "
0 0 14 3 6 #"tscore"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"tscore"
0 0 24 3 2 #"  "
0 0 14 3 5 #"ttime"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; display last scene"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"last-scene"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"goal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"sprite->pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"GAME OVER. PACMAN GOT EATEN.\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"Thank you for playing!\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Total Time:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"aqua\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"aqua\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Total Score:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Final Score:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"final-score"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"grafx/win.jpg\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 3 #") ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 12 #")))]        "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"PACMAN EATS ALL THE DOTS.\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"Thank you for playing!\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Total Time:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"aqua\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"aqua\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Total Score:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Final Score:\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"final-score"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"TOCK"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"grafx/win.jpg\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 3 #") ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Pos Pos (listof Pos) -> (listof Pos) or false"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; search for the shortest path between start and goal, false if no "
 #"path exists on bd"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"A-star"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 4 #"goal"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 59
#";; WorklistEntry is (make-wle Pos Pos Number Number Number)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 42 #";; interp. the worklist entry used in todo"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 60
#";;     pos is the position , parent is the parent position, "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 47 #";;     f is f-score, g is g-score, h is h-score"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"wle"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 41 #";; (listof WorklistEntry) -> (listof Pos)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 44 #";; return the path from the worklist entries"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-path"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"reverse"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 7 #"wle-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")) "
0 0 14 3 3 #"rsf"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 20 #";; Pos Pos -> Number"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 32 #";; calculate the heuristic score"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"h-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";; Initial heuristic score"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"h0"
0 0 24 3 2 #" ("
0 0 14 3 7 #"h-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 4 #"goal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 30 #";; Pos (listof Pos) -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 52 #";; return true if lop contains pos, false other wise"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 42 #";; can't use the built-in function member?"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pos-member?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 24 3 1 #"("
0 0 14 3 5 #"goal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 11 #"pos-member?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 35 #";; Pos (listof Pos) -> (listof Pos)"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 57 #";; produce the neighbouring positions of p that are on bd"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 36 #";; determine if n is in the board bd"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"in?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-board?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"goal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 9 #"in-board?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"in-board?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 3 #"in?"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"remove-first-n"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 14 #"remove-first-n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 95
(
 #";; Pos Pos Number Number Number (listof WLE) (listof Pos) (listof WL"
 #"E) -> (listof WLE) or false"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 53 #";; can't use equal? for comparison, use goal? instead"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"goal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 4 #"goal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-wle"
0 0 24 3 1 #" "
0 0 14 3 4 #"goal"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 14 3 3 #"rsf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pos-member?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 10 #"fn-for-lop"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 31 #")                              "
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 10 #"fn-for-lop"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 34 #";; hn is the heuristic score for n"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"hn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"h-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"goal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                            "
0 0 17 3 16 #";; g-score for n"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"gn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                            "
0 0 17 3 11 #";; f = g+ h"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"gn"
0 0 24 3 1 #" "
0 0 14 3 2 #"hn"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 8 #"make-wle"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 2 #"gn"
0 0 24 3 1 #" "
0 0 14 3 2 #"hn"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 17 3 27 #";(display (neighbour p bd))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 9 #"neighbour"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 4 #"todo"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 2 #") "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-wle"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 14 #"remove-first-n"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 2 #") "
0 0 14 3 1 #"g"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-wle"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 14 3 3 #"rsf"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 66
#";; (listof WLE) (listof Pos) (listof WLE) -> false or (listof WLE)"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-lop"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 3 #"rsf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ["
0 0 17 3 31 #";; (listof WLE) -> (listof WLE)"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 17 3 69
(
 #";; sort the worklist with increasing f-score, if equal then sort by "
 #"h"
) 0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"sort-f"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 5 #"wle-f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"wle-f"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 5 #"wle-h"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"wle-h"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 4 #"comp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                      ("
0 0 14 3 4 #"sort"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"comp"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 8 #"))))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 17 3 22 #";; the sorted worklist"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"sorted-todo"
0 0 24 3 2 #" ("
0 0 14 3 6 #"sort-f"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 17 3 43 #";; select the entry with the lowest f-score"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 11 #"sorted-todo"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 10 #"fn-for-pos"
0 0 24 3 2 #" ("
0 0 14 3 7 #"wle-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"wle-parent"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 5 #"wle-f"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 5 #"wle-g"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 5 #"wle-h"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 11 #"sorted-todo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 7 #"visited"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 3 #"rsf"
0 0 24 3 6 #"))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"get-path"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 2 #"h0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 2 #"h0"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; on-tick handler:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GameState -> GameState"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; advances the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"gs-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"gs-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gs-board-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"game-time"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"tick-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 9 #"game-time"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-board"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"tick-board"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"new-board-image"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tick-board-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-score"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"tick-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-time"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"tick-time"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 9 #"game-time"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-ghost"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"tick-ghost"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-board"
0 0 24 3 1 #" "
0 0 14 3 9 #"game-time"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"make-gs"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 9 #"new-board"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 15 #"new-board-image"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 9 #"new-score"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 8 #"new-time"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 9 #"new-ghost"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Natural Sprite Board Natural -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; update the time counter"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"tick-time"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-board"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-board"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 2 #"  "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Ghost Sprite Board Time -> Ghost"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; update the position and direction of the ghost to chase pacman"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tick-ghost"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"ghost"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"integer?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"goal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 11 #"sprite->pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 5 #"ghost"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"search-result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"A-star"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 11 #"sprite->pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 14 3 8 #"MAP-LIST"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 13 #"search-result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 13 #"search-result"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"ghost-dir"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Sprite Board Time -> Sprite"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; updates pac-man's position based on its direction"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"tick-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"R\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 2 #" ("
0 0 14 3 14 #"checked-move-x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 14 #"checked-move-y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Natural Natural Direction Board -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; moves x in direction dir, unless it runs into a wall on bd or dir"
 #" is not in the x direction"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; ASSUMPTION: assumes x, y is at least one cell away from any edge "
 #"of bd"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"checked-move-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 13 #"restrict-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 13 #"restrict-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Natural Natural Direction Board -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; moves y in direction dir, unless it runs into a wall on bd or dir"
 #" is not in the y direction"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; ASSUMPTION: assumes x, y is at least one cell away from any edge "
 #"of bd"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"checked-move-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 13 #"restrict-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 3 #") ("
0 0 14 3 13 #"restrict-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Natural Natural Natural Natural Board -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";; produces new-coord if bd does not contain a wall at check-x, chec"
 #"k-y; otherwise produces old-coord"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"restrict-move"
0 0 24 3 1 #" "
0 0 14 3 7 #"check-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"check-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-coord"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-coord"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 7 #"check-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"check-y"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"wall\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 9 #"old-coord"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 9 #"new-coord"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Board Sprite -> Board"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; if cell at pacman's position is not empty, make a new board in wh"
 #"ich it is"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tick-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"empty\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 2 #"bd"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"new-board-w-empty-at"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 14 3 2 #"bd"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Number Number Board -> Board"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; produces a new board with the same cell values as bd, except it h"
 #"as \"empty\" at x, y"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"new-board-w-empty-at"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 1 #" "
0 0 14 3 2 #"y0"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"map-board"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 2 #") "
0 0 17 3 40 #"; Natural Natural CellValue -> CellValue"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"y0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 7 #"\"empty\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 2 #"cv"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 2 #"bd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Board Image Sprite -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; updates the board image with an empty cell at x, y if pac-man is "
 #"in a cell with a dot or a cherry"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"tick-board-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"dot\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"cherry\""
0 0 24 3 3 #")) "
0 0 17 3 16 #";cherry is added"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 16 #"place-cell-image"
0 0 24 3 1 #" "
0 0 14 3 3 #"MTC"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 11 #"board-image"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Sprite Board Score Time -> Score"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; increases by 1 the score if pac-man is now in a cell containing a"
 #" dot"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; increases by 5 the score if pac-man is now in a cell containing a"
 #" cherry"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tick-score"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-board"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 10 #"last-board"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"new-pm"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dot\""
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cherry\""
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 5 #"score"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Sprite Sprite Board -> Sprite"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; update the position of the ghost sprite"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Sprite -> Pos"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; take the x and y of a sprite"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"sprite->pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"sp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"sp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"sp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Ghost -> Pos"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; get the position of the ghost"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"gt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"gt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"gt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Pos Pos -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; determine if two pos are same"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"goal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"upward"
0 0 24 3 4 #"    "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")  ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"downward"
0 0 24 3 2 #"  "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")  ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"leftward"
0 0 24 3 2 #"  "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 10 #"))       ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rightward"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 10 #"))       ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Board Pos -> (listof Pos)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-moves"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 2 #"p1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"solid?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 2 #"p2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"valid?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"leftward"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 7 #")      "
0 0 17 3 29 #";having these four as helpers"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"rightward"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 6 #")     "
0 0 17 3 26 #";is optional, the function"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"upward"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 9 #")        "
0 0 17 3 31 #";signature would allow inlining"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"downward"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"valid?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"solid?"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"is-solid?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pos-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pos-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"is-solid?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"empty\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"wall\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 9 #"]        "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dot\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cherry\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";; on-key handler:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; GameState KeyEvent -> GameState"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; updates pac-man's direction based on key"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-gs"
0 0 24 3 2 #" ("
0 0 14 3 10 #"new-dir-pm"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #") "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"gs-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"gs-board-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 13 #"new-dir-ghost"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #") "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Sprite KeyEvent -> Sprite"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; produces pac-man facing in a new direction based on key"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"new-dir-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 24 3 4 #"    "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"U\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 24 3 2 #"  "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 8 #")]      "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #"  "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-sprite"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-dir-ghost"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"w\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"U\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 8 #")]      "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-ghost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";; stop-when handler:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; GameState -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; determines if pac-man has eaten all the dots"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"count-dots"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gs-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"goal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ghost->pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"sprite->pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Board -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; count the number of dots in the board"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"count-dots"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"foldr-board"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 17 3 45 #";Natural Natural CellValue Natural -> Natural"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dot\""
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 2 #"bd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";; to-draw handler:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GameState -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; draws the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"above/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"odd?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"grafx/logo_1.png\""
0 0 24 3 4 #")) ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"grafx/logo_2.png\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 11 #"render-time"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ceiling"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 12 #"render-ghost"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-gt"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 9 #"render-pm"
0 0 24 3 2 #" ("
0 0 14 3 5 #"gs-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 69
(
 #"                                                                    "
 #"("
) 0 0 14 3 12 #"render-score"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gs-score"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 83
(
 #"                                                                    "
 #"              ("
) 0 0 14 3 14 #"gs-board-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 69
(
 #"                                                                    "
 #"("
) 0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 7 #"gs-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"gs"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"grafx/bckg.jpg\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 3 #") ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-W"
0 0 24 3 1 #" "
0 0 14 3 8 #"SCREEN-H"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Board -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; draws the board"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"foldr-board"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 16 #"place-cell-image"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cell-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 3 #"MTB"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 2 #"bd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Sprite Image Natural -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; adds pac-man image to img (if time is odd seconds, render closed "
 #"mouth pacman)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"render-pm"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"PM"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 4 #"odd?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 4 #"C-PM"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #")) "
0 0 14 3 4 #"U-PM"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #")) "
0 0 14 3 4 #"D-PM"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #")) "
0 0 14 3 4 #"L-PM"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"sprite-dir"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #")) "
0 0 14 3 4 #"R-PM"
0 0 24 3 4 #"]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"place-cell-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"PM"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sprite-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 3 #") ("
0 0 14 3 8 #"sprite-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"pm"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Sprite Image Natural -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; render the ghost sprite onto img"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-ghost"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"GT-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"grafx/ghost_2.png\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"grafx/ghost.png\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"scale"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #"("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"grafx/ghost_2.png\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 2 #"GT"
0 0 24 3 4 #"]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"place-cell-image"
0 0 24 3 1 #" "
0 0 14 3 6 #"GT-IMG"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ghost-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ghost-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"ghost"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Score Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; adds score to img"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"score-text"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Score: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 3 #")) "
0 0 14 3 15 #"SCORE-TEXT-SIZE"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 10 #"score-text"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCORE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 3 #"img"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-time"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"score-text"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Time: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 3 #")) "
0 0 14 3 15 #"SCORE-TEXT-SIZE"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"aqua\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 10 #"score-text"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"SCORE-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 3 #"img"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; CellValue -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; draws a board cell"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"cell-image"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"empty\""
0 0 24 3 2 #") "
0 0 14 3 3 #"MTC"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"dot\""
0 0 24 3 4 #")   "
0 0 14 3 3 #"DTC"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"wall\""
0 0 24 3 3 #")  "
0 0 14 3 4 #"WALL"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cv"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cherry\""
0 0 24 3 2 #") "
0 0 14 3 6 #"CHERRY"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;------------------------------------------------------------------"
 #"-------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Operations on Board and other helpers:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Board Natural Natural -> CellValue"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; looks up the value of a Board cell"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(board-ref EE-BOARD 1 1)"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(board-ref ED-BOARD 2 1)"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(board-ref DD-BOARD 3 1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; (Natural Natural CellValue -> CellValue) Board -> Board"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; the analogue of map for boards, the function is called for"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; each position in the board to produce a cell value for that"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; position in a new resulting board"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"map-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"build-vector"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"build-vector"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; (Natural Natural CellValue X -> X) X Board -> X"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; the analogue of foldr for boards, the function is called for"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; each position in the board to produce single value"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"foldr-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"nrows"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ncols"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"nrows"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"rows"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"cols"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 5 #"ncols"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"cols"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 1 #"y"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"board-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"bd"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 6 #"))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"rows"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Image Natural Natural Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; adds cell-img to board-image at x, y board coordinates"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"place-cell-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"cell-img"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 11 #"board-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"cell-img"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 9 #"CELL-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 11 #"board-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; starting the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"main"
0 0 24 3 1 #")"
0           0
